
package view.NhanVien;

import controller.*;
import exception.SaiSDT;
import exception.SaiSoDuong;
import exception.TrungBanh;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import model.*;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import view.Phieu.hoaDonForm;


/**
 *
 * @author MeoMeo
 * @author DinhGi
 */
public class createBillForm extends javax.swing.JPanel implements ItemListener{

    private Connection con = ConnectDB.getConnection();
    private NhanVien nhanvien;
    private KhachHang khach;
    private HoaDon don;
    private ArrayList<KhachHang> kh; 
    private ArrayList<BanhMi> banh;
    private DefaultTableModel bang ;
    private ArrayList<BanhMi> ds;
    private ArrayList<ChiTietDon> chitiet;
    private int tong ;
    private HashSet<String> dachon;
    public static createBillForm billform ;
    
    public createBillForm() {
        initComponents();
        innit();
        update();
        LoaiBanhComboBox.addItemListener(this);
        tenBanhComboBox.addItemListener(this);
    }
    
    private void innit(){
        don = new HoaDon();
        ds = new ArrayList<BanhMi>();
        kh = new ArrayList<>();
        dachon = new HashSet<>();
        bang = new DefaultTableModel(new String[] {"Tên bánh", "Loại bánh", "Số lương", "Tổng"},0);
        billform = this;
        chitiet = new ArrayList<>();
        nhanvien = NhanVienForm.formNV.getNhanvien();
        tenNhanVien.setText(nhanvien.getTen());
        ngayLap.setText(new SimpleDateFormat("dd/MM/yyyy").format(new Date()));
        banh = AccessData.loadListBanhMi(con);
        banhTable.setModel(bang);
        LoaiBanhComboBox.removeAllItems();
        tenBanhComboBox.removeAllItems();
        for( int i = 0 ; i < BanhMi.cacloai.length; i++)
             LoaiBanhComboBox.addItem(BanhMi.cacloai[i]); 
    }
    
    public  void updateData(){
        kh = AccessData.loadListKhachHang(con);
    }
    
    private void update(){
        chitiet.clear();
        tong = 0;
        totalCost.setText("0");
        while(bang.getRowCount() != 0)
            bang.removeRow(0);
        maDon.setText("");
        SDT.setText("");
        tenKH.setText("");
        chietKhau.setText("");
        thanhtoan.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        banhTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        thembanh = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        LoaiBanhComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        tenBanhComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        maDon = new javax.swing.JTextField();
        ngayLap = new javax.swing.JTextField();
        chietKhau = new javax.swing.JTextField();
        tenNhanVien = new javax.swing.JTextField();
        SDT = new javax.swing.JTextField();
        tenKH = new javax.swing.JTextField();
        thongbao = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        soLuongBanh = new javax.swing.JTextField();
        soLuongHienCo = new javax.swing.JLabel();
        thanhtoan = new javax.swing.JButton();
        xoabanh = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        totalCost = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(249, 240, 222));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1018, 558));
        setLayout(null);

        jLabel1.setBackground(new java.awt.Color(246, 211, 128));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel1.setText("Thông tin hóa đơn");
        add(jLabel1);
        jLabel1.setBounds(30, 10, 1146, 79);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Tên khách hàng:");
        add(jLabel2);
        jLabel2.setBounds(520, 170, 135, 22);

        banhTable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        banhTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Loại bánh", "Tên bánh", "Số lượng", "Tổng"
            }
        ));
        banhTable.setFillsViewportHeight(true);
        banhTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                banhTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(banhTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(30, 244, 480, 230);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Ngày lập: ");
        add(jLabel3);
        jLabel3.setBounds(30, 170, 81, 22);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("Tên nhân viên:");
        add(jLabel4);
        jLabel4.setBounds(30, 210, 120, 22);

        thembanh.setBackground(new java.awt.Color(65, 208, 89));
        thembanh.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        thembanh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/addIcon.png"))); // NOI18N
        thembanh.setText("Thêm bánh");
        thembanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thembanhActionPerformed(evt);
            }
        });
        add(thembanh);
        thembanh.setBounds(530, 470, 161, 49);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setText("Loại bánh:");
        add(jLabel5);
        jLabel5.setBounds(620, 250, 84, 22);

        LoaiBanhComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(LoaiBanhComboBox);
        LoaiBanhComboBox.setBounds(760, 250, 152, 30);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("Tên bánh:");
        add(jLabel6);
        jLabel6.setBounds(620, 290, 82, 22);

        tenBanhComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(tenBanhComboBox);
        tenBanhComboBox.setBounds(760, 290, 152, 30);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setText("Mã đơn:");
        add(jLabel7);
        jLabel7.setBounds(30, 130, 67, 22);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setText("Chiết khấu:");
        add(jLabel8);
        jLabel8.setBounds(520, 210, 91, 22);

        maDon.setEditable(false);
        maDon.setBackground(new java.awt.Color(204, 204, 255));
        add(maDon);
        maDon.setBounds(180, 120, 270, 30);

        ngayLap.setEditable(false);
        ngayLap.setBackground(new java.awt.Color(204, 204, 255));
        add(ngayLap);
        ngayLap.setBounds(180, 160, 270, 30);

        chietKhau.setEditable(false);
        chietKhau.setBackground(new java.awt.Color(204, 204, 255));
        add(chietKhau);
        chietKhau.setBounds(660, 200, 280, 28);

        tenNhanVien.setEditable(false);
        tenNhanVien.setBackground(new java.awt.Color(204, 204, 255));
        add(tenNhanVien);
        tenNhanVien.setBounds(180, 200, 270, 30);

        SDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SDTActionPerformed(evt);
            }
        });
        add(SDT);
        SDT.setBounds(660, 120, 280, 33);

        tenKH.setEditable(false);
        tenKH.setBackground(new java.awt.Color(204, 204, 255));
        add(tenKH);
        tenKH.setBounds(660, 160, 280, 30);

        thongbao.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        thongbao.setForeground(new java.awt.Color(255, 0, 0));
        add(thongbao);
        thongbao.setBounds(530, 520, 480, 30);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setText("Số điện thoại:");
        add(jLabel9);
        jLabel9.setBounds(520, 130, 110, 22);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setText("Số lượng:");
        add(jLabel10);
        jLabel10.setBounds(620, 330, 80, 22);
        add(soLuongBanh);
        soLuongBanh.setBounds(760, 330, 152, 30);

        soLuongHienCo.setFont(new java.awt.Font("Arial", 0, 48)); // NOI18N
        soLuongHienCo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Số lượng hiện có", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 18))); // NOI18N
        add(soLuongHienCo);
        soLuongHienCo.setBounds(620, 370, 300, 90);

        thanhtoan.setBackground(new java.awt.Color(102, 168, 236));
        thanhtoan.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        thanhtoan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/payIcon_1.png"))); // NOI18N
        thanhtoan.setText("Thanh toán");
        thanhtoan.setEnabled(false);
        thanhtoan.setIconTextGap(2);
        thanhtoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thanhtoanActionPerformed(evt);
            }
        });
        add(thanhtoan);
        thanhtoan.setBounds(701, 470, 159, 49);

        xoabanh.setBackground(new java.awt.Color(255, 17, 67));
        xoabanh.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        xoabanh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/cancelIcon.png"))); // NOI18N
        xoabanh.setText("Xóa");
        xoabanh.setEnabled(false);
        xoabanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoabanhActionPerformed(evt);
            }
        });
        add(xoabanh);
        xoabanh.setBounds(870, 470, 100, 49);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel12.setText("Tổng tiền:");
        add(jLabel12);
        jLabel12.setBounds(40, 500, 110, 30);

        totalCost.setEditable(false);
        totalCost.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        add(totalCost);
        totalCost.setBounds(160, 490, 340, 50);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Borreder/createBill.png"))); // NOI18N
        add(jLabel11);
        jLabel11.setBounds(0, 0, 1016, 556);
    }// </editor-fold>//GEN-END:initComponents

    private void thanhtoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thanhtoanActionPerformed
        if(chitiet.size() < 1){
            JOptionPane.showMessageDialog(null, "Chưa chọn bánh!");
            return ;
        }       
        if(khach.upHang((int)tong/100))
            thongbao.setText(khach.getTen() + " được tăng hạng");
        AccessData.updateKhachHang(khach, con);
        don = new HoaDon(new Date().getTime() + "", nhanvien, khach, 
                (ArrayList<ChiTietDon>) chitiet.clone(), khach.getUuDaiHang(), new Date());
        controller.AccessData.insertHoaDon(don, con);
        new hoaDonForm(don).setVisible(true);
        dachon.clear();
        update();
      //  view.NhanVien.NhanVienForm.formNV.dispose();
    }//GEN-LAST:event_thanhtoanActionPerformed

    private void xoabanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoabanhActionPerformed
        int row = banhTable.getSelectedRow();
        if(row >= 0 && row < bang.getRowCount()){
            tong -= Integer.parseInt(bang.getValueAt(row, 3).toString());
            bang.removeRow(row);
            totalCost.setText(tong + "");
            dachon.remove(chitiet.get(row).getBanh().getMa());
            chitiet.remove(row);
            xoabanh.setEnabled(false);
        }else{
            //thong bao
        }
    }//GEN-LAST:event_xoabanhActionPerformed

    private void SDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SDTActionPerformed
       try{
            String sdt = SDT.getText();
            if( !sdt.matches("[0-9]{1,}")) throw new SaiSDT();
            if( !kh.contains(new KhachHang(Integer.parseInt(sdt), "", 0))){
                thongbao.setText("Số chưa đăng kí!");
                tenKH.setText("");
                chietKhau.setText("");
            }    
            else{
                thongbao.setText("");
                khach = AccessData.findKhachHang(sdt, con);
                tenKH.setText(khach.getTen());
                chietKhau.setText(khach.getUuDaiHang()+"%");
                maDon.setText(new Date().getTime() + "");
                thanhtoan.setEnabled(true);
            }
            
       }catch(NumberFormatException | SaiSDT ex){
           update();
           JOptionPane.showMessageDialog(null, "Nhập sai!");   
       }
    }//GEN-LAST:event_SDTActionPerformed

    private void thembanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thembanhActionPerformed
      
        try{
            BanhMi banhmi = ds.get(tenBanhComboBox.getSelectedIndex());
            int soluong = Integer.parseInt(soLuongBanh.getText());
            int hienco = Integer.parseInt(soLuongHienCo.getText());
            if(soluong <= 0 || soluong > hienco) throw new SaiSoDuong();
            ChiTietDon chitietdon = new ChiTietDon(banhmi, soluong);
            if(dachon.contains(banhmi.getMa())) throw new TrungBanh(); // them ex
                dachon.add(banhmi.getMa());
            soLuongHienCo.setText(Integer.parseInt(soLuongHienCo.getText()) - soluong + "");
            chitiet.add(chitietdon);
            bang.addRow(chitietdon.toObject());
            tong += chitietdon.getTien();
            totalCost.setText(tong + "");
        }catch(NumberFormatException | SaiSoDuong ex){
            JOptionPane.showMessageDialog(null, "Sai số lượng!");
        }catch( IndexOutOfBoundsException ẽ){
            JOptionPane.showMessageDialog(null, "Chưa chọn bánh!");
        } catch (TrungBanh ex) {
            JOptionPane.showMessageDialog(null, "Bánh đã dược chọn!");
        } finally{
            soLuongBanh.setText("");
        }
        
    }//GEN-LAST:event_thembanhActionPerformed

    private void banhTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_banhTableMouseClicked
        int row = banhTable.getSelectedRow();
        if( row >= 0 && row < bang.getRowCount())
            xoabanh.setEnabled(true);
    }//GEN-LAST:event_banhTableMouseClicked

    @Override
    public void itemStateChanged(ItemEvent e) {
        if( e.getSource() == tenBanhComboBox){
            if(tenBanhComboBox.getSelectedIndex() != (-1)){
                String ma = ds.get(tenBanhComboBox.getSelectedIndex()).getMa();
                soLuongHienCo.setText(QueryReport.reportTonBanh(ma, con));
            }
            
        }
        else if(e.getSource() == LoaiBanhComboBox){
            ds.clear();
            tenBanhComboBox.removeAllItems();
            soLuongHienCo.setText("");
            String loai = LoaiBanhComboBox.getSelectedItem().toString();
            for( BanhMi b : banh)
                if( loai.equals(b.getLoai())){
                    ds.add(b);
                    tenBanhComboBox.addItem(b.getTen());
                }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> LoaiBanhComboBox;
    private javax.swing.JTextField SDT;
    private javax.swing.JTable banhTable;
    private javax.swing.JTextField chietKhau;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField maDon;
    private javax.swing.JTextField ngayLap;
    private javax.swing.JTextField soLuongBanh;
    private javax.swing.JLabel soLuongHienCo;
    private javax.swing.JComboBox<String> tenBanhComboBox;
    private javax.swing.JTextField tenKH;
    private javax.swing.JTextField tenNhanVien;
    private javax.swing.JButton thanhtoan;
    private javax.swing.JButton thembanh;
    private javax.swing.JLabel thongbao;
    private javax.swing.JTextField totalCost;
    private javax.swing.JButton xoabanh;
    // End of variables declaration//GEN-END:variables

    
}
